basePath: /
definitions:
  api.Anomaly:
    properties:
      date:
        type: string
      gradient:
        type: number
      types:
        items:
          type: string
        type: array
      value:
        type: number
    type: object
  api.UpdateSensor:
    properties:
      gradient_bound:
        type: number
      lower_bound:
        type: number
      mesh_id:
        type: string
      upper_bound:
        type: number
    type: object
  model.Data:
    properties:
      date:
        type: string
      gradient:
        type: number
      id:
        type: integer
      sensor_id:
        type: integer
      value:
        type: number
    type: object
  model.RoomModel:
    properties:
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      sensors:
        items:
          $ref: '#/definitions/model.Sensor'
        type: array
      url:
        type: string
    type: object
  model.Sensor:
    properties:
      description:
        type: string
      gradient_bound:
        type: number
      id:
        type: integer
      latest_data:
        $ref: '#/definitions/model.Data'
        type: object
      lower_bound:
        type: number
      measurement_unit:
        type: string
      mesh_id:
        type: string
      name:
        type: string
      room_model_id:
        type: integer
      upper_bound:
        type: number
    type: object
host: visense.f4.htw-berlin.de:44344
info:
  contact: {}
  description: This API provides information about 3D room models with associated
    sensors and their data.
  license: {}
  title: vi-sense BIM API
  version: 0.1.5
paths:
  /models:
    get:
      description: Query all available room models
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.RoomModel'
            type: array
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Query models
      tags:
      - models
  /models/{id}:
    get:
      description: Query a single room model by id with containing sensors
      parameters:
      - description: RoomModel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RoomModel'
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Query room model
      tags:
      - models
  /sensors:
    get:
      description: Query all available sensors.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Sensor'
            type: array
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Query sensors
      tags:
      - sensors
  /sensors/{id}:
    get:
      description: Query a single sensor by id
      parameters:
      - description: Sensor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Sensor'
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Query sensor
      tags:
      - sensors
    patch:
      consumes:
      - application/json
      description: Updates the mesh id and anomaly preferences of a single sensor.
      parameters:
      - description: SensorId
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateSensor
        in: body
        name: update_sensor
        required: true
        schema:
          $ref: '#/definitions/api.UpdateSensor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Sensor'
        "400":
          description: bad request
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Update sensor preferences
      tags:
      - sensors
  /sensors/{id}/anomalies:
    get:
      description: Query anomalies for a specific sensor
      parameters:
      - description: Sensor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Anomaly'
            type: array
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Query anomalies
      tags:
      - sensors
  /sensors/{id}/data:
    get:
      description: Query data for a specific sensor
      parameters:
      - description: Sensor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Data'
            type: array
        "400":
          description: bad request
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      summary: Query sensor data
      tags:
      - sensors
schemes:
- https
swagger: "2.0"
